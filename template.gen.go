// Code generated by go-bindata.
// sources:
// src/cmd/reporter/resource/template/app.js
// src/cmd/reporter/resource/template/app.ts
// src/cmd/reporter/resource/template/commit.html
// src/cmd/reporter/resource/template/report.html
// src/cmd/reporter/resource/template/style.css
// src/cmd/reporter/resource/template/tsconfig.json
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _srcCmdReporterResourceTemplateAppJs = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xdd\x93\x9b\x38\x12\x7f\x9f\xbf\xa2\x8f\x7d\x08\xdc\x78\xe4\x24\x8f\x76\x98\xad\xb9\x4d\x52\x7b\xa9\x7c\x54\x6d\x72\x57\x75\x85\xb9\x2d\x0d\xb4\x41\x3b\x20\x58\x49\xf8\xa3\x92\xf9\xdf\xaf\x5a\x02\x1b\x30\x76\xf9\x6a\x79\x18\x0b\xa9\xbf\xfb\xd7\xdd\x62\x36\x5c\x41\x52\x95\xa5\x30\xdf\xea\x02\x42\xf0\x56\xf2\x4d\x2a\x36\x90\x14\x5c\xeb\x70\xe5\xb9\xb3\x95\x77\xbf\x92\x00\x00\x83\x33\x23\x4a\x2c\x84\xc4\xc3\xe9\x09\x85\x48\x2a\x09\xf4\xe7\x2e\x8a\xb8\x48\xe3\x78\x40\xda\x91\xdf\x47\x91\x14\x32\x8e\xdf\xcc\xe9\x65\x74\x2e\xca\x0c\xb4\x4a\xc2\x95\x97\x1b\x53\xeb\xc5\x7c\xbe\xdd\x6e\x59\xa6\xf8\x86\x1b\xae\x58\x52\x95\x73\xb7\x9c\x47\x11\xd7\x39\xa9\x00\x5e\x98\x70\xe5\x0d\xcd\xea\xc9\x1e\xac\x07\xe6\xca\x75\x65\xb9\xce\xb8\x93\xa2\xe1\xa2\xd0\x90\xf5\x22\x72\x20\xcc\x5f\xdf\x47\xd1\xa6\xd4\xe4\x47\xfe\x7a\x7c\xca\x21\x57\xb8\xee\x79\x91\x09\x93\x37\x8f\xd6\xfe\xea\x49\x70\x39\x4f\x0a\x91\x3c\xed\xf9\xe3\x5d\xb2\x57\xa8\xcd\xdc\x45\x7e\x1e\x45\x89\xf3\xea\xbe\x5d\xbd\x99\xf3\x89\x18\x1e\x93\xc2\x33\x7d\x62\x1c\x3d\x51\x44\x47\x71\x3c\xe2\x9d\x8a\xf9\xc0\x67\x6e\xd0\x2a\xa7\x6c\x9f\xe6\xe8\xe4\xbd\xcf\xab\x30\x2d\x85\xb4\xd6\x44\x51\xa2\xfa\xba\x3b\xbe\x2e\xd6\xdd\x7b\xf7\xeb\x2d\x6f\x08\x9a\x86\x67\x2d\x2e\x27\x42\x68\x14\x4f\x9e\x50\xb1\x2e\x72\x36\x98\x42\xeb\x06\xf5\x3c\x8a\x4c\x62\xb1\x70\xff\x93\x5b\x52\xd8\x5a\xa1\xce\xac\x6f\x65\x4d\x72\x87\x68\x57\x2b\x0f\x8c\x30\x05\x86\x2b\x2f\x8a\x26\x11\x7b\x8a\x9a\xd4\xc6\x87\x88\xa7\xa2\x79\x42\xaf\x0d\x37\x8d\x06\xf7\x73\x17\x45\x6e\xe1\x74\xf5\x94\xbb\xed\x36\xf3\x47\x9a\xeb\x54\x34\x8f\x7f\x60\x62\x1c\xab\x5b\x5f\xc9\x99\xa2\x4e\x94\xa8\x8d\xa8\xa4\xe5\xee\xbd\x5f\x29\xa1\x56\xa2\x52\xc2\xec\x2d\x7b\xf7\x72\x25\x2f\x6f\x4c\x5e\x29\xcb\xe9\x96\x67\x9a\x82\xdd\x6b\xb3\x59\x56\xd2\xe4\x9f\x79\x89\x1a\x42\x88\x6e\xe8\xdc\xfb\xc0\x65\xc3\xd5\xde\x9b\x81\xf7\x1e\x1f\x55\xb7\xfe\xc4\x55\x92\x7b\x33\x47\xf3\x50\x2b\x51\xb8\x5d\x7b\xf8\xa1\x91\xe8\x7e\x8b\xfd\x81\xa6\xc9\x1a\x6d\x68\xf7\x2b\xd6\x06\xcb\x47\x54\xf4\xf2\x25\x31\x95\x5d\x3a\xaa\xcf\xd5\xe6\x70\xf4\x16\x13\xb7\xbe\x89\x9d\x79\x0f\x35\xc1\xcc\x5f\x37\x32\xa1\x20\x82\x1f\xc0\x77\xcb\x76\xd8\x79\xa8\xeb\xc3\x26\x3d\xc4\xf5\xbb\xc9\x05\xf9\x43\x3f\xcb\xc3\x09\xbd\xb1\x92\x0b\x09\x21\xa4\x55\xd2\x94\x28\x0d\xcb\xd0\xbc\x2b\x90\x96\xff\xd8\xff\x33\xf5\x3d\x3a\xf7\x82\x11\x93\xc2\xba\x52\x06\x42\xf8\xf0\xf5\xcb\x67\x56\x73\xa5\xd1\x27\x4c\x89\xe4\x2d\x37\x7c\x4c\xed\x5a\x4f\xa7\xbf\x65\xee\x76\x8f\xb4\x07\x13\x2c\x68\xa9\x98\xde\x62\x5d\x54\x7b\x68\xb5\xfd\x00\x0f\x6e\x07\x22\xa8\x87\x30\x53\x7d\xac\x12\x5e\xe0\x57\xa3\x84\xcc\xfc\xb1\x72\x97\xf8\xb1\xf2\x76\x77\xd2\x2d\xe6\x0a\x1a\xd9\xba\x52\xef\x78\x92\xf7\x82\xbd\x0b\xe0\x3b\x28\x34\x8d\x92\x90\x54\x52\x57\x05\xb2\xa2\xca\xfc\x1d\x13\x69\xb0\x84\xe7\x9e\xf2\xfe\xf1\x94\xf0\x02\x65\x66\xf2\x1e\x03\xe5\x69\x2d\x0a\x83\xea\x52\x3a\x1c\x85\x17\xdc\xf4\x01\xcc\x78\x9a\xbe\xdb\xa0\x34\x1f\x85\x36\x28\x51\xf9\xde\x13\xee\x9b\xda\x9b\x1d\x61\xe1\x63\x1f\x14\xf4\xcc\xe7\x00\x05\x1a\xd0\xd7\xe8\x63\x1b\x5e\x34\xb8\x1c\x08\x20\x8b\x89\x19\x99\xe1\x2a\x43\x33\x45\x63\x91\xc7\x9c\x94\x5f\x6c\xc6\x7d\xdd\x73\xfa\x79\x9c\xae\x01\xa5\xd7\x01\xef\xd9\xfe\x7d\xa8\x6b\x56\xab\xca\x54\x66\x5f\x23\x59\xfa\x9b\x8b\x25\x84\x3d\x37\x45\xda\xf7\x73\x5d\x29\xf0\xc9\x4e\x01\x21\xbc\x5c\x82\x80\x37\x93\xa9\x76\xd9\x58\x82\xb8\xbd\x1d\x87\x49\xac\x61\x2a\x81\x91\x88\x99\x48\x21\x0c\x61\xa8\xb1\x7b\x5a\x94\x58\x4e\x94\x99\x90\xe8\x1f\x06\xc5\x6c\xca\x86\x48\xc4\xc1\x30\x76\xcf\x37\xa7\xab\x56\xac\xe7\xb5\x81\x59\x4e\x44\xa6\xa9\x69\xca\xfe\x5b\xe0\x76\x10\x99\xed\x75\x5d\xc1\xce\x49\x3b\x24\x5f\xbc\x38\xee\x6e\xcf\x54\xc3\x09\x20\x4c\x36\xe2\xa4\x67\xc7\xe8\xb2\x30\x21\xc2\x4c\x85\xce\x64\x70\x1b\xb6\xc8\x69\x43\xe7\x06\xf7\x0c\xbe\x83\x49\x16\x60\x58\x32\x40\xce\x18\x49\x9d\x2d\x1c\xc2\x03\x00\x65\xfa\x60\x6b\xde\xdf\xb5\xc5\xff\x3b\x95\xec\xa9\xf9\x25\x84\x13\x26\x71\x91\x2e\xa0\xc7\x39\x3b\xa1\x90\x42\x2e\x80\x33\xc9\x4b\x64\xba\x79\xd4\x46\xf9\x2f\x67\xf0\x3a\x60\xa6\xfa\x57\x5d\xa3\xfa\x85\x6b\xf4\x83\x53\x3e\xae\x73\xe2\xcb\xb9\xce\x4f\x0f\x37\xa5\x26\xb5\x25\x6a\xcd\x33\x64\x42\xa6\xb8\xfb\xb2\xf6\xbd\x95\xf4\x02\xf8\x5b\x08\x77\xaf\xe0\xe7\xde\xf9\x51\xef\x19\x9e\x00\x7a\xe2\x4e\xd5\x25\x64\xcb\xee\x8c\x2d\x94\xc1\x05\x98\x6c\xe2\x44\x94\xb8\x68\x03\x4d\xc8\x7b\x5f\xa9\x92\x1b\x54\xbe\xc4\x2d\xbc\xe5\x06\xfd\x9d\x6d\xd5\xc1\x84\xfb\x89\x5a\xc0\x8b\x17\x30\x9f\x5b\xee\x63\x4d\x6b\xbf\xc5\x4c\xc9\x6b\xff\xcf\xf0\xfe\x4f\x96\x04\xc3\xa6\xf7\x3c\x4c\x1e\x41\x76\x8c\x9a\xc3\x97\xc8\x0c\x4c\x79\xa9\xeb\xd0\x90\x63\x42\x4a\x54\xbf\x7e\xfb\xf4\x91\x4a\xa2\x2e\x2e\x14\xd8\x11\x4d\x83\x02\xdb\x5d\xd5\x79\xda\xd1\x73\x55\xcb\x69\x69\x8f\xbd\x66\x17\x5c\x6c\x34\x47\xfa\xe5\xa8\x77\x4c\xfa\xd1\x0b\xf7\x79\x47\x2e\x77\x0a\x35\xaa\xf6\xdd\x99\x22\x07\x75\xcc\xce\x51\xad\x6f\x46\x53\xb3\x75\x46\x5d\x0c\xfe\x71\x42\x0c\xac\xd6\x63\xab\x6b\x4e\x04\x04\xc2\xdf\x30\x7b\xb7\xab\x7d\x8f\xfd\x9d\xae\x10\x1a\x6e\x81\x96\x33\xf0\x44\x56\x7a\xa3\x19\x3c\xba\x30\xb4\xaf\xc3\x79\xeb\x6c\x38\x73\x31\xa8\xb9\x61\x06\xb5\xf1\x77\x0c\x4b\x2e\x8a\x00\x7e\xfc\xe8\x6f\x52\x8b\xb0\x6e\x0f\x65\x12\xd0\xa7\x05\xd2\xed\x62\x18\x26\xb2\x73\x3b\xbc\xd2\x0c\x85\xb5\x97\xab\x2b\xac\x3e\x01\x5e\x87\xcf\xae\x71\xf4\xfb\xa5\xeb\x39\xe7\x31\xa8\xc6\xe3\x9f\x04\xf6\x5c\x6f\x3b\x4f\xf0\x7f\x48\xb0\x25\xa4\xbf\x71\x1a\x2b\x6b\x5e\x68\xfc\x2b\x93\x65\x60\x8e\xf7\x93\xbd\x4f\xb2\x84\x99\xaa\xbb\x3c\x4e\x58\x66\xf9\x5a\x03\x4e\xcd\x1b\x8f\x9d\xd6\x0f\xcb\x70\xa1\xe1\x1c\x47\xb4\xbf\x0d\x2e\x80\xbd\xdf\x4e\xcf\x97\xe8\x01\x27\x19\x9a\xf7\x4d\x51\xfc\x07\xb9\xf2\x03\x42\xb9\xbd\x32\x1f\x3f\x69\x22\x4b\xf2\x89\xde\xfd\x00\xee\xe0\x55\x7c\x20\xb2\x27\xb6\x59\x07\xc3\xbd\x5f\xab\x46\x69\xb7\xb9\x38\x6c\x7e\x12\xb2\x31\xa8\x3b\xda\x0b\x1e\xb8\x56\x3c\xb0\xdd\x50\x43\x4e\xe9\x43\x61\x54\xb0\x8a\xe8\xe6\xab\x68\x15\xf9\xd1\x7f\x57\x71\x7c\x1b\xfc\xbc\x8a\x57\xf1\x3c\x9b\x41\xc9\x4d\x92\xf7\xae\x23\xb9\x28\x10\x7c\xbb\x0b\x21\x28\x64\xb8\xc3\x84\x24\x07\x53\x97\x92\x0d\xa7\xfb\xcc\xa6\x12\x29\xbc\x3c\x05\xa8\x95\x12\xbd\x8a\xa9\xc1\xda\xff\x42\x79\x54\xb1\x83\x5d\xca\x83\x37\x85\x28\x27\xf9\x30\xe8\xc8\xab\xa8\xe3\x8c\x83\x0b\x1f\x27\x30\xb8\xd6\xd1\x83\x85\xc6\xb3\x1a\x86\x82\x2f\x89\x71\x77\x37\x53\x17\x4c\xd7\x85\x30\xad\x77\x2f\xe3\x80\xfd\x51\x09\xe9\x6f\x78\x11\x8c\x87\x43\x0f\x43\xe3\xc1\xd7\x6e\x3f\xd4\xf5\xf2\xe6\xd9\x0f\x82\xe5\x0d\xf9\x6a\xbf\x31\x97\x37\xff\x0b\x00\x00\xff\xff\xc3\xe8\x64\x55\xee\x13\x00\x00"

func srcCmdReporterResourceTemplateAppJsBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateAppJs,
		"src/cmd/reporter/resource/template/app.js",
	)
}

func srcCmdReporterResourceTemplateAppJs() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/app.js", size: 5102, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcCmdReporterResourceTemplateAppTs = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x59\x8f\xdb\x38\x12\x7e\xd7\xaf\xa8\xd5\x04\x88\x34\xed\x96\x92\x3c\xda\x2d\x0f\xb2\x93\x04\xb3\x41\x0e\x20\xe9\x5d\x60\xa1\xd6\x8e\xd9\x12\x2d\x71\xa2\x2b\x24\xe5\x03\x8e\xff\xfb\x82\x87\x2c\x52\x92\x83\xc6\xf4\x43\x9b\x2a\x56\x91\x75\xf1\xab\x22\x9d\x30\x84\xb4\xa9\x19\x07\xc6\x11\x27\xe9\x1b\xc4\x11\x44\x70\x3a\x3b\xa4\xe6\x98\x6e\x51\x8a\x61\x47\xf0\xfe\xf7\xa6\xaa\x08\x87\x93\x03\x00\x80\x48\xb6\x84\xba\xab\x1e\x31\x5d\x49\x42\x4d\xea\x25\x30\x4e\x49\x9d\x2b\x02\x62\x85\x4d\xd8\x55\xcc\x26\xa4\x63\x0e\x8e\xf2\x11\x4b\x86\x38\x1e\x28\xa6\x46\xf7\x28\xff\x0f\xc1\x7b\xad\x0e\x4f\x4d\x2e\x65\x4d\x2a\xf5\xbd\x6f\x4b\x88\x60\xe3\xdc\x65\x64\x07\x69\x89\x18\x8b\x5c\x35\xe3\xae\xa5\xa8\x39\xc1\x49\x85\x4b\x52\x63\x3d\x35\x9e\x26\x69\x53\x83\xf8\x77\x1b\xc7\x88\x64\x49\x62\xf0\xf5\xbc\xeb\x38\xae\x49\x9d\x24\x77\xa1\xf8\xb0\xa7\x49\x95\x03\xa3\x69\xe4\x16\x9c\xb7\x6c\x19\x86\xfb\xfd\x3e\xc8\x29\xda\x21\x8e\x68\x90\x36\x55\xa8\x86\x61\x1c\x23\x56\x24\x89\x0b\xa8\xe4\x91\x6b\x6a\x33\xac\x6a\x0e\x4d\x1d\xeb\x6d\xe3\xae\x9d\x59\xfd\x33\xcc\x11\x29\x19\xe4\x17\xe3\x2f\x5c\xc5\xab\x75\x1c\xef\x2a\x26\x14\x2f\x5e\x8d\x26\x11\x14\x14\x6f\x07\xb5\x73\xc2\x8b\xee\x51\x2a\xdc\x7c\x23\xa8\x0e\xd3\x92\xa4\xdf\x8e\xe8\xf1\x36\x3d\x52\xcc\x78\xa8\x1c\x1c\xc6\x71\x2a\xcd\x58\xeb\xc1\x5d\x88\xa6\x0e\xbb\xf8\x1e\xe5\x6c\xa4\x95\xf8\x8b\x63\x31\x91\x24\xb6\xdc\x8c\x73\x4d\x3b\x11\xc7\x62\x53\x11\xce\x49\x24\xc6\x9f\x86\x1c\xc5\x59\x45\x6a\x77\xed\xc4\x71\x4a\x8d\x2d\xb5\x88\x63\xfa\x5d\xff\x6c\x74\xb2\x71\x94\xeb\x4c\x9b\xba\x8b\x53\x94\x7e\xc3\x34\xe8\xbd\x24\x1d\x47\x18\xeb\x30\x0b\xe3\x98\xa7\x22\xd0\xeb\x5f\xd4\x48\xb8\xa8\x5f\x53\xa9\x73\x5f\xb5\x10\x6d\xac\xf4\xa5\x2e\x70\xc2\x4b\x1c\xb9\x71\x3c\x93\x86\x93\x94\xc8\x84\x33\x04\xe3\x8c\xdf\xc6\xcc\x02\x03\x3a\x06\xea\xe7\x36\x8e\xd5\x40\xee\x32\x6c\xaa\x88\x2a\xb2\x03\xc3\x53\x56\xef\x1e\xff\xc2\x29\x97\x72\x6a\xf8\x24\xb1\x0c\xb3\x94\x92\x96\x93\xa6\x16\xa2\xc6\xe7\x93\xc4\x5b\x4a\x1a\x4a\xf8\x51\xc8\xf6\xe3\x27\x09\xa2\x8e\x17\x0d\x15\x62\x6a\x34\x7f\xac\x25\x69\xe3\xe8\xa8\x55\x4d\xcd\x8b\x4f\xa8\xc2\x0c\x22\x88\x25\xa7\xfb\x1e\xd5\x1d\xa2\x47\x77\x01\xee\x3b\xfc\x48\xfb\xf1\x47\x44\xd3\xc2\x5d\x28\x9e\xd7\x2d\x25\xa5\xa2\xca\xc9\xf7\x5d\x8d\xd5\x6f\x79\xbc\xf0\x74\x79\xc7\xb8\xa0\x7e\xc5\x2d\xc7\x02\x7d\xc5\xc7\xe7\x94\x37\x72\xa8\xb8\x3e\x35\xbb\xcb\xd4\x1b\x9c\xaa\xb1\x93\xac\x1c\x69\x15\xbc\x6e\x5b\x8d\x9a\x52\x61\xda\xa5\xbc\xa1\x9e\x0f\xa7\x01\x34\x78\x41\x58\x50\x21\x52\x43\x04\x59\x93\x76\x15\xae\x79\x90\x63\xfe\xb6\xc4\x62\xf8\xcf\xe3\xbf\x32\xcf\x15\xf3\xae\xbf\xb2\x85\x28\x6e\x1b\xca\x21\x82\xf7\x5f\x3f\x7f\x0a\x5a\x44\x19\xf6\x86\xb2\xe2\xdb\xcc\x0a\x26\x84\x9f\x0c\xd9\x9e\x3a\x2c\x7c\xd1\x40\xe6\x9f\x38\x63\x6f\x70\x5b\x36\x47\xd0\x9b\xfd\x80\x67\x27\x73\x01\x71\xec\x03\xde\x7c\x68\x52\x54\xe2\xaf\xb2\x2a\x78\xfe\x79\x63\xef\xad\x02\x3a\xde\x5b\x53\x67\x8d\x0a\xd4\x79\xc4\xc1\xb6\xa1\x6f\x51\x5a\x78\x87\x68\x2d\x3c\xd8\x94\x38\x28\x9b\xdc\x3b\x04\x24\xf3\x07\x0b\xcd\xa9\xb9\x55\x4a\x5c\xe7\xbc\x18\xf8\x4b\xcc\x61\x4b\x4a\x8e\xe9\xcf\x9c\xae\x38\x5c\xdf\xca\xc0\x00\x65\xd9\xdb\x1d\xae\xf9\x07\xc2\x38\xae\x31\xf5\xdc\x6f\xf8\xd8\xb5\xee\x02\x30\x44\x6b\x1d\x6d\xf3\x2f\x0c\xd5\x86\xec\x29\x7b\x05\x3b\x54\x76\x78\xe5\x4c\x56\xe9\x57\xc0\x01\x47\x34\xc7\xbc\x67\x1c\xf3\x49\xf3\xd5\x6a\xaa\x89\xf0\x98\xbf\x72\xec\xf5\xce\xa3\xdc\xb0\xd8\x5d\xc3\x60\x39\x38\x2b\xe1\x1c\xf3\x2f\xca\x9d\x1e\xc9\x96\xaa\x1d\xf1\x97\xaa\x11\x30\xac\xde\x36\x14\xbc\x1d\xa2\x40\x20\x7a\xb1\x02\x72\x37\x1b\x56\x15\x90\x15\x90\x9b\x1b\x7f\xe4\x32\xb2\x9d\x0b\x61\x4c\x92\x80\x64\x10\x45\x40\xb2\xb1\x84\xf8\xa3\x98\x77\xb4\xd6\xf6\xe0\x3a\x17\x6a\x5e\x30\x7d\x31\xa7\x43\x4c\x12\x3b\xb2\x67\x67\x3a\xd2\xcb\xba\xae\x33\xd0\xbb\x56\xd4\x3c\xd1\x10\x79\xfb\x25\x28\xaf\xc5\x89\x75\xa6\x45\xb0\xb8\x2c\x51\xcf\x9f\x0f\x21\xda\x0f\xd9\x3c\xcd\x14\x29\x92\x8f\x24\xc4\xdf\x21\x10\x45\xf9\x22\xca\xe7\x93\x8c\xe7\x70\x13\x59\xd6\xab\x2a\xb9\x80\x93\x6c\xd8\x78\x90\x9a\x61\x1f\x65\x01\xf4\x00\x05\xa8\x3f\xa4\x5b\x52\x67\xaf\xe5\x09\xf5\x0e\xfa\xa8\xfe\x49\x32\x7f\x35\x23\xc3\x2b\xd1\xc2\x4e\x54\x92\x6d\xab\x21\xbb\x98\x70\xc8\x3e\x16\x05\x35\xaa\x70\xc0\xba\x47\xc6\xa9\xf7\x62\x01\xaf\xfc\x80\x37\xff\x6e\x5b\x4c\x7f\x47\x0c\x7b\xfe\x54\x4e\xb6\xbb\x28\x28\x10\x2b\xa6\x93\xb2\xf5\x3d\x04\x15\x66\x0c\xe5\x38\x20\x75\x86\x0f\x9f\xb7\x9e\xfb\x50\xbb\x3e\xfc\x23\x82\xdb\x97\xf0\x9b\x31\x3f\xec\x7b\x45\xc6\x07\x63\xb9\xe9\x76\xb2\xb1\x3e\x5c\xd1\x45\x35\xd9\x3c\x9f\x99\x21\x15\x5e\x2a\x4f\x8b\x6c\x7a\xd7\xd0\x0a\x71\x4c\xbd\x1a\xef\xe1\x0d\xe2\xd8\x3b\x48\x68\xf5\x67\xac\x4f\xe9\xf2\xf9\xf3\x30\x94\xb2\xc3\xa1\x64\x9e\x4e\x94\x0a\xb5\xde\xf7\x68\xfd\x3d\x48\xfd\x71\x7e\x5b\x9f\x22\x3f\x47\x29\x73\xe9\xe2\x17\xc0\x2b\x7f\x60\x1f\xe3\x85\xa8\x46\x01\xa9\x6b\x4c\xff\xb8\xff\xf8\x41\x64\x4c\x5b\x6a\xc8\xd2\x9b\x08\x8e\x25\x88\x59\x8d\x72\x2a\x6f\xd4\x09\x5c\xc2\x17\xf9\xab\x6f\x26\xaa\x04\x0d\x27\x49\x5f\x69\x54\x75\x58\x82\x4a\xc2\x9e\x6c\xa6\x65\x7f\x29\xf2\x7b\xa6\x2b\x30\x04\x02\x87\xe0\xce\xaa\x45\x3f\x47\x20\xf0\x4c\xde\x01\x7b\x0e\xfe\x35\xe0\x19\xf1\x8f\xa0\x64\x02\xa1\xcc\x3b\x80\xc6\xd0\x38\x99\x41\x51\x81\x06\x54\x82\xc1\x85\x74\x18\x20\x20\x5a\x9f\x68\x1f\x3a\x03\x96\xb9\x7f\x36\x82\xa6\x15\xa3\x06\x72\xd9\x65\xa1\xbf\xc5\x4d\x90\xab\x45\xa2\xa9\x10\x99\xf8\x05\xe7\x6f\x0f\xad\xb7\x09\x7e\x7d\x76\x62\xe7\xe0\xd7\xcd\x02\x5c\x92\x57\x66\x27\xa2\x61\xc3\xae\xf0\xfa\xd3\x2e\x9c\x6a\x77\x85\x7d\x2d\xe2\x01\xc7\x8c\x7b\x87\x00\x57\x88\x94\x3e\xfc\xf8\x61\x12\x05\x24\x8c\xd2\x57\x26\xb6\x14\x96\xc5\xdf\xd2\x78\x6f\xb7\x16\xb6\x9c\x4e\xb0\xeb\xca\x4c\xa1\x4b\x64\x40\x9f\x28\x3d\x18\x98\x28\xa8\x70\x64\x9a\x0c\x66\x42\xd0\xb9\xea\x2c\x16\x36\xcc\xd4\xa8\xe2\xff\x8d\x95\x84\xd9\x84\xdd\x23\x51\x32\xb6\xa8\x64\x33\x2c\x4f\xab\x1c\x13\xb5\xdc\x5f\x5c\xb8\x11\x05\x23\xe0\x4d\xdf\xd1\x5d\xd1\x50\xca\x6a\x25\xe6\xd5\x3c\x5f\x3d\x31\x52\x6e\xf5\xd3\xbe\xc4\xac\xb4\xbe\x63\x24\xb2\x05\x99\x87\xa5\x44\x4c\xbf\xcf\x67\xc3\x46\xbd\xd5\xe6\xd9\xe9\x20\x0e\xca\xbb\xae\x2c\xff\x8b\x11\xf5\xfc\x33\x3c\x3b\x0d\x97\x87\x58\xce\x7e\x14\xdf\x9e\x0f\xb7\xf0\x32\x11\xf3\x92\x28\xb1\xd8\xbf\x7c\xfe\xd1\x74\x94\x79\xfe\x79\xa9\xbf\x3f\x92\xba\xe3\x58\x50\x60\x63\xe8\xd7\x97\xe0\xb6\xec\x95\x5a\x08\x9d\xd1\x12\x3e\xcb\x8b\x98\x89\x38\x02\xa4\xa8\xe8\xb4\xc3\x87\xf8\x21\xf6\xe2\xff\x3d\x24\xc9\x8d\xff\xdb\x43\xf2\x90\x84\xf9\x02\x2a\xc4\xd3\xc2\xe8\x21\x0a\x52\x62\xf0\x24\x15\x22\xa0\x38\xc0\x07\x9c\x8a\x9d\xfc\x31\x8c\x89\x0c\xd9\xa1\xd2\x7e\xe4\x31\x23\x2e\x17\x89\x5f\x26\x02\xd9\xe4\x73\x8c\x2b\x4e\xa1\x45\x95\xb7\xfb\xb9\x7e\x6b\x87\x4a\x8d\x11\xd2\x43\xc2\xb8\xb8\x97\x4c\xfc\xc9\x8d\xc0\x0e\x33\xe0\x92\xe1\xab\x8b\xda\x6b\xad\xae\xf4\x68\xa0\x4b\x98\x2c\x3e\x01\x6b\x4b\xc2\xb5\x41\x2f\x12\x3f\xf8\xab\x21\xb5\x27\xd6\xf3\xaf\x37\x75\xb2\x68\xa9\x99\xb3\x23\x2c\x79\xdd\xb6\x9e\xef\x18\xef\x5e\xaa\x4c\xf5\xcf\x5e\xb2\x62\x0b\x6b\xfb\xba\xd5\xd5\xdc\x7e\x97\xbb\x52\xb3\xae\x54\x38\xdd\x87\x8a\x6a\xa8\x1a\xd2\xc4\x7e\x75\xd3\x64\xbd\xfd\xf0\x06\x28\x3f\xd5\x4b\x40\x1f\x5b\x83\x34\x7e\x2b\xd4\x57\x7f\x8b\xd3\xb8\xd3\x5b\xf4\xfe\xbe\x6e\x11\x95\x51\x17\xd2\xd9\x74\x90\xf5\x4c\x39\x76\x50\x31\x79\x95\xd4\x70\x37\xf7\x10\x79\x8f\x72\xbb\xf2\xff\x69\x1a\x32\x7a\x8c\xec\xaf\xd4\xb6\xa5\x7c\xfe\xf1\xd2\x6a\x0d\x26\x2f\xa9\xa8\x1a\xa9\x23\xcb\x91\x4d\xb2\x0d\x71\xce\xce\xff\x03\x00\x00\xff\xff\xa7\x8d\xc9\xa4\xc6\x15\x00\x00"

func srcCmdReporterResourceTemplateAppTsBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateAppTs,
		"src/cmd/reporter/resource/template/app.ts",
	)
}

func srcCmdReporterResourceTemplateAppTs() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateAppTsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/app.ts", size: 5574, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcCmdReporterResourceTemplateCommitHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x8e\x83\x30\x0c\x45\xf7\x3d\x45\x94\x7d\x1b\xa9\xcb\x11\x70\x11\x2b\x0b\x37\xa4\xc4\x2a\x09\xa3\xc4\x03\xea\xed\x47\x29\x94\xa6\x69\x59\x80\xad\x6f\xe3\xe7\xef\xa6\xa7\x59\x98\x11\x53\x6a\xa5\x99\xbc\x27\x96\xdd\x41\x08\x21\x4a\x81\xc9\xdb\x91\x82\xdd\xa4\x5a\x26\x33\x05\x91\x5f\x47\x00\xa4\x5e\xeb\xa2\xee\x59\xdb\x01\x04\x0a\x5a\x37\x2a\x27\xef\x32\xf9\x41\xa4\x68\x5a\xe9\x98\x7f\xd3\x8f\x52\xcb\xb2\x9c\x86\x88\x33\x32\xc6\x93\x99\xbc\x5a\x43\x05\x80\xc9\x69\x2d\x05\x8e\xdc\xca\x92\xe6\xf5\xd7\x32\x2c\x19\xc3\x75\x92\xdd\xe1\x2b\x7f\x6f\x19\x69\x4c\x62\xd8\x97\xdf\xab\xdc\xb9\x03\x98\x7d\xca\xe0\xee\x5c\x89\x28\x5c\xb4\xd7\x17\xf6\x40\xec\xfe\x2e\x0f\xe0\xe9\x46\x18\x94\x19\xc9\xdc\xee\x78\x39\x9a\x7b\xb4\x89\xd5\x6a\xb0\x02\x30\x8f\x35\xba\x2d\x68\x14\x7e\x1a\xb6\x7b\x8f\x43\xaa\xa8\xf2\x03\x90\x05\xad\xdf\xfb\xbe\x98\x5b\xee\x89\x6c\xf3\xd0\x7c\xce\x8f\x4b\xd4\x69\xd1\x17\x6d\xef\x29\x54\x10\x00\x26\x16\xe3\xb7\xf6\xf2\x04\xeb\xe7\x3f\x00\x00\xff\xff\xb5\x25\xc3\xd3\x61\x02\x00\x00"

func srcCmdReporterResourceTemplateCommitHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateCommitHtml,
		"src/cmd/reporter/resource/template/commit.html",
	)
}

func srcCmdReporterResourceTemplateCommitHtml() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateCommitHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/commit.html", size: 609, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcCmdReporterResourceTemplateReportHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xc1\x8e\xd3\x30\x10\xbd\xfb\x2b\x86\x39\xb5\xd2\xb6\x49\x2a\x16\x50\xb1\x73\xd9\x52\xa4\xbd\x80\xa0\x7b\xe0\x38\x4d\xa6\xc4\x92\x63\x47\xc9\x6c\x97\x2a\xca\xbf\x23\x27\x29\xad\xc8\xc5\xb1\xdf\xcc\x7b\xf3\x9e\xad\xdf\xed\xbe\x3d\x1d\x7e\x7d\xff\x02\x95\xd4\x2e\x57\x3a\x2e\xe0\xc8\xff\x36\xc8\x1e\xe3\x01\x53\x99\x2b\x00\x00\x5d\xb3\x10\x14\x15\xb5\x1d\x8b\xc1\x97\xc3\x7e\xf5\x09\x67\x48\xac\x38\xce\x77\xdc\xb8\x70\x81\x96\x9b\xd0\x0a\xf4\xfd\x7a\x47\xc2\xeb\x7d\x68\x6b\x12\xc0\x4d\x9a\x7d\x84\x67\xf2\x90\x6e\x60\xb3\xd9\x66\xd9\x36\xcb\x70\x18\x74\x32\x35\x4f\x44\x47\xea\x18\xaa\x96\x4f\x06\x13\xbc\xd7\xf5\x54\xb3\xc1\xb3\xe5\xb7\x48\x8e\x50\x04\x2f\xec\xc5\xe0\x9b\x2d\xa5\x32\x25\x9f\x6d\xc1\xab\x71\xf3\x00\xd6\x5b\xb1\xe4\x56\x5d\x41\x8e\x4d\x86\xb9\x52\xba\x93\xcb\x55\xa5\xef\xd7\x3f\xe3\x6e\x18\x14\xe8\x64\x06\x74\x32\x59\x55\xfa\x18\xca\xcb\x2c\x5d\xda\x33\x14\x8e\xba\xce\x60\x44\xb9\x8d\x54\x30\x7f\xba\xca\xae\x96\x7f\x8c\x96\x75\x52\x65\xf9\x0d\x6e\xf2\xaf\xec\xb9\x25\xe1\x12\x82\xff\x3f\x0f\xc0\x29\x8b\x07\xd8\xa4\xe9\x07\xc8\x1e\xb7\xe9\xfb\x6d\xfa\x08\x2f\x87\xa7\x31\x95\xe6\x8e\xc9\xd1\xd1\x31\xc0\x29\xb4\x06\x4f\xd6\x49\x9c\x63\x3f\xae\x5b\x9d\x8c\xe0\x3c\xaf\xf5\xcd\xab\x80\x5c\x1a\x36\x28\xfc\x47\x10\x6c\xf9\xaf\x05\x6e\x8c\x53\x75\x52\xda\xf3\xcd\xe8\xf8\x37\x3a\x8e\x3d\x35\x59\x8f\xf9\x5c\x72\x5f\x7e\x9f\xc9\x29\x84\x71\x96\x1b\x93\xee\x8a\xd6\x36\x32\xb5\x2c\x4e\xaf\xbe\x10\x1b\x3c\x2c\x96\xd0\x5f\xc5\x3b\x21\xb1\xc5\x8e\x84\xc0\x00\x4e\xa9\xd0\x30\xe0\x67\xa5\x94\xea\xfb\xf5\x73\x37\x0c\x4a\x0d\xcb\xc5\x32\x1e\x8c\xc2\x57\x52\x9d\x4c\x77\xa3\xe2\x6d\xc5\x07\xfb\x37\x00\x00\xff\xff\xc1\x91\x8c\x14\xc0\x02\x00\x00"

func srcCmdReporterResourceTemplateReportHtmlBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateReportHtml,
		"src/cmd/reporter/resource/template/report.html",
	)
}

func srcCmdReporterResourceTemplateReportHtml() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateReportHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/report.html", size: 704, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcCmdReporterResourceTemplateStyleCss = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\xdb\xae\xa3\x36\x14\x86\xef\xf7\x53\xb8\x1a\x8d\xd4\x56\x21\xc2\xe6\x14\xc8\x03\x54\xbd\xee\xe1\xde\xe0\x45\x70\x37\xd8\xc8\x38\xb3\xb3\xa7\xea\xbb\x57\xe1\x9c\xc4\x99\x51\x99\x6a\x24\x90\xe7\x0e\x2f\x1b\xdb\x6b\xfd\x9f\x33\x5b\xfc\xf2\xcf\xe8\xef\x17\x74\xfd\x97\xca\x8b\xd3\xf0\xcf\x5c\x9c\x12\x94\x49\xa1\x41\x68\x27\x95\x97\x17\xf4\xcf\x0b\x4a\x25\x7b\x1f\xfb\xd1\xec\xf5\xa4\xe4\x59\x30\x27\x93\xa5\x54\x09\xfa\x00\x00\xc7\x2e\xf8\xc6\x99\x2e\x12\x84\x5d\xd7\xad\x2f\xc7\x97\xae\xb1\xa2\xea\xc4\x45\x82\xe8\x59\xcb\xbe\x5f\x2e\x85\x76\x72\x5a\xf1\xf2\x3d\x41\xbf\xc1\x49\x02\xfa\xe3\xd7\x1d\xfa\x9d\x16\xb2\xa2\x3b\xf4\x0b\x08\xf8\x44\x77\xe8\x4f\x50\x8c\x0a\xba\x43\x0d\x15\x8d\xd3\x80\xe2\xf9\xb8\x9e\x5d\xbf\x2c\x3a\x2c\x6c\x58\x8d\x1f\x84\xd1\x21\x9e\xd6\x3d\x76\xd0\x70\xd1\x0e\x83\x4c\x2a\xaa\xb9\x14\x09\x12\x52\x40\xdb\x6f\x9f\xd2\x06\x9c\x42\x96\x0c\xd4\xd0\xfb\x6e\x2b\x0f\x3b\xe9\x06\x2a\x60\x15\x17\x70\x37\x28\x70\x3f\x1e\xbb\x78\x26\xab\x8a\xeb\x21\xec\xbc\x41\xfa\xca\xdb\xbc\x3a\xb4\xe4\x27\x91\xa0\x46\x2b\xd0\x59\xd1\x4f\xe0\x54\x8d\x93\x97\xf0\x24\xda\x36\x3a\x5c\x43\xd5\xcc\x43\xd3\x3c\xbb\x69\xc6\x3d\xcf\xa4\x70\xdc\x2f\x54\x2d\xcf\xf3\xfe\xbd\x8c\x37\x75\x49\xdf\x93\xf9\xfa\x1e\x42\xfd\xca\x0c\xa1\x6b\xf3\xcd\x6e\xef\xe6\x36\xec\x3a\x03\xa1\x41\x3d\xd9\xf4\x4d\xf0\x66\xcf\xe6\x61\x35\xcd\x5e\x93\xeb\x72\xb4\xe2\xe9\x59\x0f\x5a\xfc\xeb\xdc\x68\x9e\xbf\x3b\xbd\x98\x13\xd4\xd4\x34\x03\x87\xb6\x59\x98\xeb\xf0\x0d\xf8\xa9\xd0\x09\x8a\x5c\x77\xde\xdc\xf0\xcf\x90\x20\x2f\x18\xab\xdf\x17\x37\x9a\xf4\x50\x8c\x23\xc7\xa6\x54\x2a\x06\xca\x51\x94\xf1\x73\x33\x28\x61\x2e\xcf\x29\xed\x5d\xd7\x04\xf9\xf5\x05\x35\xb2\xe4\x0c\x7d\xf0\x58\x40\xa3\x43\x1f\x97\x9f\x40\xe5\xa5\x7c\x4b\x50\xc1\x19\x03\x71\x9c\xc9\xd8\x98\xc7\x3e\xcf\x5a\x51\xd1\xf0\x4e\xe2\x53\xdd\x11\x6e\x86\x17\x7c\x25\x5e\xcb\x21\x4a\xd3\x46\x96\x53\x46\xb5\xac\xaf\x40\x8c\x7b\x55\xdd\xee\x1d\xec\x8d\x4d\xed\xe2\xda\x09\x72\xa9\xaa\x04\x9d\xeb\x1a\x54\x46\x1b\x78\x78\xb7\x82\x92\x6a\xfe\x69\x08\x18\x04\x1a\xc6\x84\x90\xd0\xa8\x2c\x5e\x9d\x46\xaa\xaf\x8b\x1a\x0a\x57\x42\xae\xa7\xa7\xa7\x1b\x99\xd8\xfe\x78\x57\xc9\x59\x93\x29\x9d\xb4\x2c\xd1\x3e\x30\x25\xf2\x36\xf2\x54\x05\xb2\xa6\x19\xd7\xef\x09\xc2\xc6\x7d\xed\x79\x75\x2a\x86\x9d\x8d\x7d\xdd\x1f\x78\x55\x4b\xa5\xa9\xd0\x86\x51\xf8\x7b\x31\x7e\xb4\x38\x5b\x9c\xbf\x01\x67\x2f\xc8\x31\x18\x05\xbc\x4d\x9c\xf1\x22\x9c\x89\xc5\xd9\xe2\xbc\x02\x9c\x33\x9c\x81\x67\xd4\xef\x36\x69\x26\x8b\x68\xf6\x2c\xcd\x96\xe6\x15\xd0\xec\x67\x19\xf3\x5c\xa3\x80\xb7\x89\xb3\xb7\x08\x67\xdf\xe2\x6c\x71\x5e\x01\xce\x04\x42\x00\x62\x14\xf0\x36\x71\xf6\x17\xe1\x1c\x58\x9c\x2d\xce\x2b\xc0\x19\xb3\xd8\xc7\x99\x51\xc0\xdb\xc4\x39\x58\x84\x73\x68\x71\xb6\x38\xaf\x00\x67\x42\x28\xce\x23\xa3\x80\xb7\x89\x73\xb8\x08\xe7\xc8\xe2\x6c\x71\x5e\x01\xce\x51\x1e\xfb\xb9\x49\xf6\xd1\x46\x71\x8e\x16\xe1\x7c\xb0\x38\x5b\x9c\x57\x80\x73\x48\xc3\xd8\xa4\xfa\xc3\x46\x69\x3e\x2c\xa2\x39\xb6\x34\x5b\x9a\x57\x40\x33\x0e\xfc\x30\x36\xfd\x5f\x3b\xde\x28\xce\xf1\x32\x13\xc9\x77\x73\x8a\x59\x9e\x2d\xcf\xdf\xf2\xa1\x2a\x72\x03\x42\xcd\x0a\xde\x26\xd0\x78\xa1\x2d\xcc\xfa\xc2\x2c\xd1\x6b\x20\x3a\x72\xc3\x3c\x35\xd9\x3c\xf1\x66\x8d\x61\xcb\x9c\x61\xd8\x5a\xc3\x2c\xd1\x6b\x20\x9a\x91\xfc\x60\xf2\x92\xe0\xad\x7a\xc3\xf0\x32\x73\x18\xb6\xee\x30\x0b\xf4\x1a\x80\xf6\x02\x00\x66\xb2\x93\xe0\xad\xda\xc3\xf0\x32\x7f\x18\xb6\x06\x31\x4b\xf4\x1a\x88\x0e\x03\xe6\xf9\xa9\x59\xc1\x1b\x25\x7a\x99\x45\x0c\x5b\x8f\x98\x25\x7a\x15\x44\x67\x71\x10\x18\x89\xde\xaa\x49\x0c\x2f\x73\x89\x61\x6b\x13\xb3\x44\xaf\x81\xe8\x20\x23\x51\x1a\x98\x15\xbc\x51\xa2\x97\x19\xc5\xb0\x75\x8a\x59\xa2\x57\x41\xb4\xe7\x12\xcf\xf8\x1b\xbd\x55\xab\x18\x5e\xe6\x15\xc3\xd6\x2c\x66\x89\x5e\x03\xd1\x38\xf7\x63\x6a\xfc\x1c\xbd\x55\xbb\x18\x5e\xe6\x17\xc3\xd6\x30\x66\x89\x5e\x03\xd1\xa1\x8b\x21\xca\xcd\x0a\xde\x28\xd1\xcb\x2c\x63\xc4\x5a\xc6\x2c\xd1\x6b\x20\xda\xf7\xc2\x90\x9a\xfe\x8e\x26\x5b\xb5\x8c\x91\xff\x6c\x19\x63\xa0\x29\x2f\x9b\x61\xc0\xd3\xf4\x56\x5c\x38\xcf\x2e\x39\xdc\x33\xaa\xc7\x9b\x10\x67\xd2\xdf\x07\x01\x54\x77\xea\x8d\x63\xfa\xb5\xdc\xa6\x52\x6b\x59\x4d\x45\x50\x43\x62\xeb\xfb\xdb\x06\x45\x2e\xc7\x85\x53\xc6\xb8\x38\x39\x5d\xfd\x66\x3c\xfd\x7f\xc7\xd0\x30\xc5\xb0\x3e\xfc\xc8\x31\x9e\xdd\x19\x79\x23\x91\xae\xc9\xf4\x96\x70\x3c\x1f\xfa\x92\x8f\xaf\x1f\xa9\x2e\x9a\x92\xfe\x48\x88\xbb\xbb\xbe\x6b\x47\xdc\x8f\xbb\x3d\xf9\xe9\xae\x04\x9a\x9e\xc6\x22\x76\xb7\x55\x3a\xad\xae\x49\x70\x9f\xb5\xb6\x27\xbd\xed\x9b\x20\x52\x5f\xae\xe7\x88\x59\x7d\x13\x9e\xa6\x6f\xc4\xf3\x23\xa7\xdf\x5d\x3b\x04\x4d\x27\x5f\x76\x56\xcd\xb5\x73\x2d\xf9\xec\xbc\x59\x7e\x19\xe8\xe3\x31\x3b\xc3\xee\xf1\x76\x52\x13\x88\x6d\x2f\xb4\xf7\x4c\x28\x8e\x31\x53\xe6\x92\xe2\x7a\xae\x7e\xe1\x27\x90\x64\x41\xe8\x1f\x6e\x86\x16\x78\x76\x43\x67\x41\xe6\x0f\xde\xfc\xc1\x9f\x3f\x0c\x1f\xa0\x6e\xf7\xd0\x17\x97\xe6\xba\x3f\xfa\x8f\x37\x45\x4f\x4b\x99\xbd\x3a\x20\x58\x1b\xbb\x59\x04\x35\x20\x8a\x49\x7d\x2f\xef\x56\x36\xce\xe1\x81\x36\xcd\x2b\x28\x4d\x57\x9e\x3e\xa8\xa6\x63\x21\x78\xf2\xab\xf4\x78\xc4\x74\xf3\x14\x40\xd9\x17\xf3\x3a\xd5\x73\xc4\x2d\xe8\x56\xf9\x6f\x00\x00\x00\xff\xff\x24\xa3\x73\x72\xcc\x56\x00\x00"

func srcCmdReporterResourceTemplateStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateStyleCss,
		"src/cmd/reporter/resource/template/style.css",
	)
}

func srcCmdReporterResourceTemplateStyleCss() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/style.css", size: 22220, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcCmdReporterResourceTemplateTsconfigJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x4a\xce\xcf\x2d\xc8\xcc\x49\xf5\xcf\x0b\x4e\x2c\x4b\x55\xb2\x52\x28\x29\x2a\x4d\xd5\x41\x91\x2a\xf2\x2f\x28\xc9\xcc\xcf\x2b\x56\xb2\x52\x80\xe8\x01\x4b\x26\xe6\xe4\xe4\x97\x7b\x15\xa3\xe8\x00\x4b\x94\x24\x16\xa5\xa7\x96\x28\x59\x29\x28\xa5\x16\x9b\x2a\x81\xc5\x6b\xb9\x6a\x01\x01\x00\x00\xff\xff\xf6\x4d\x1c\x67\x6e\x00\x00\x00"

func srcCmdReporterResourceTemplateTsconfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_srcCmdReporterResourceTemplateTsconfigJson,
		"src/cmd/reporter/resource/template/tsconfig.json",
	)
}

func srcCmdReporterResourceTemplateTsconfigJson() (*asset, error) {
	bytes, err := srcCmdReporterResourceTemplateTsconfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/cmd/reporter/resource/template/tsconfig.json", size: 110, mode: os.FileMode(420), modTime: time.Unix(1488959698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"src/cmd/reporter/resource/template/app.js": srcCmdReporterResourceTemplateAppJs,
	"src/cmd/reporter/resource/template/app.ts": srcCmdReporterResourceTemplateAppTs,
	"src/cmd/reporter/resource/template/commit.html": srcCmdReporterResourceTemplateCommitHtml,
	"src/cmd/reporter/resource/template/report.html": srcCmdReporterResourceTemplateReportHtml,
	"src/cmd/reporter/resource/template/style.css": srcCmdReporterResourceTemplateStyleCss,
	"src/cmd/reporter/resource/template/tsconfig.json": srcCmdReporterResourceTemplateTsconfigJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"src": &bintree{nil, map[string]*bintree{
		"cmd": &bintree{nil, map[string]*bintree{
			"reporter": &bintree{nil, map[string]*bintree{
				"resource": &bintree{nil, map[string]*bintree{
					"template": &bintree{nil, map[string]*bintree{
						"app.js": &bintree{srcCmdReporterResourceTemplateAppJs, map[string]*bintree{}},
						"app.ts": &bintree{srcCmdReporterResourceTemplateAppTs, map[string]*bintree{}},
						"commit.html": &bintree{srcCmdReporterResourceTemplateCommitHtml, map[string]*bintree{}},
						"report.html": &bintree{srcCmdReporterResourceTemplateReportHtml, map[string]*bintree{}},
						"style.css": &bintree{srcCmdReporterResourceTemplateStyleCss, map[string]*bintree{}},
						"tsconfig.json": &bintree{srcCmdReporterResourceTemplateTsconfigJson, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

